[hg.sr.ht]
#
# URL hg.sr.ht is being served at (protocol://domain)
origin=https://hg.srht.tyjgr.com
#
# Address and port to bind the debug server to
debug-host=0.0.0.0
debug-port=5010
#
# Configures the SQLAlchemy connection string for the database.
connection-string=postgresql://postgres@localhost/hgsrht
#
# The redis connection used for the webhooks worker
webhooks=redis://localhost:6379/1
#
# Disable server "publishing" for new repositories.
# When 'true', this sets the phases.publish configuration option to 'false' on
# newly created Mercurial repositories.
disable-publishing=false
#
# A post-update script which is installed in every mercurial repo.
changegroup-script=/usr/bin/hgsrht-hook-changegroup
#
# hg.sr.ht's OAuth client ID and secret for meta.sr.ht
# Register your client at meta.example.org/oauth
oauth-client-id=CHANGEME
oauth-client-secret=CHANGEME
#
# Path to mercurial repositories on disk
repos=/var/lib/hg/
#
# Path to the srht mercurial extension
# (defaults to where the hgsrht code is)
#srhtext=
#
# .hg/store size (in MB) past which the nightly job generates clone bundles.
#clone_bundle_threshold=50
#
# Path to hg (if not in $PATH or if you want sourcehut to use a custom one)
# hg_path=/path/to/hg

[hg.sr.ht::dispatch]
#
# The authorized keys hook uses this to dispatch to various handlers
# The format is a program to exec into as the key, and the user to match as the
# value. When someone tries to log in as this user, this program is executed
# and is expected to omit an AuthorizedKeys file.
#
# Uncomment the relevant lines to enable the various sr.ht dispatchers.
/usr/bin/hgsrht-keys=hg:hg
